/* MARK: LAYOUT | Vertical
*/
:root {
  --app-container-grid-template-rows:
    auto auto auto 1fr auto auto;
  /* auto auto 1fr minmax(1rem, 7rem) minmax(1rem, 7rem); */
  --border-radius: 0.3em;
  --nav-justify-content: start;
  --nav-border-radius: var(--border-radius) var(--border-radius) 0 0;
  --main-margin-block: -1rem 0;
  --main-margin-inline: 1rem;
  --main-border-radius: 0 .3rem .3rem .3rem;
  --tab-grid-auto-flow: column;
  --sub-header-display: none;
  --grid-gap: 1rem;
  --aside-display: none;
  /* container: inline-size; */
}

/* MARK: LAYOUT | Vertical SMALL SCREENS
*/
@media (width <=400px) {
  :root {
    --nav-justify-content: auto;
    --nav-border-radius: var(--border-radius);
    --tab-grid-auto-flow: column;
    --main-border-radius: var(--border-radius);
  }
}

/*  MARK: LAYOUT | Horizontal
*/
@media (width >=600px) {
  :root:has(header label:nth-of-type(1) input:checked) {
    --app-container-grid-template-columns: 12rem 1fr;
    /* --app-container-grid-template-columns: 12rem 1fr 15rem; */
    --app-container-grid-template-rows: auto auto 1fr auto auto;
    --nav-border-radius: var(--border-radius) 0 0 var(--border-radius);
    --nav-justify-content: auto;
    --main-margin-inline: -1rem 0;
    --main-margin-block: 0 0;
    --main-resize-h: horizontal;
    --main-border-radius: var(--border-radius);
    --aside-resize-v: vertical;
    --tab-grid-auto-flow: row;
    --sub-header-display: grid;
    --grid-row-span: span 2;
    --aside-display: grid;
  }
}

[hidden] {
  display: none;
}

/* MARK: WRAPPER
*/
app-container {
  display: grid;
  grid-template-rows: var(--app-container-grid-template-rows);
  grid-template-columns: var(--app-container-grid-template-columns);
  gap: var(--grid-gap);
  height: 100dvh;
  /*
	doc:
	Push HEADER/FOOTER to the top/bottom of viewport
	Use DVH: https://twitter.com/stackblitz/status/1682403409792495617
		 https://dvh.stackblitz.io/
		 https://stackblitz.com/edit/dvh?file=style.css
	*/
  overflow: hidden;
}

/* When <aside> has an fieldset that is not empty, which also gives <aside> display: grid;, add a grid column to <app-container> */
app-container:has(aside form fieldset:not(:empty)) {
  --app-container-grid-template-columns: 12rem 1fr 20rem;
  grid-template-columns: var(--app-container-grid-template-columns);
}

app-container:has(aside form fieldset:not(:empty)) main {
  margin-inline-end: 0;
}

/* app-container:has(aside h4:not(:empty)) {
  --app-container-grid-template-columns: 12rem 1fr 15rem;

  main {margin-inline-end: 0;}
} */

/* @media (max-width: 800px) {
  app-container {
    grid-template-rows: auto auto 1fr minmax(1rem, 7rem) minmax(1rem, 7rem);
    grid-template-columns: unset;
  }
  nav > section {
        grid-auto-flow: column !important;
  }
  main {
    margin: -1rem 0 0 0 !important;
  }
  nav header, aside header, header {
    display: none !important;
 }
} */

/* MARK: APP-BANNER
*/
app-banner {
  display: grid;
  grid-auto-flow: column;
  grid-column: 1 / -1;
  user-select: none;
  text-align: center;
  overflow: hidden;
}

app-banner p {
  padding: .2rem;
  font-size: 75%;
}

/* MARK: HEADER
*/
header {
  display: grid;
  grid-auto-flow: column;
  grid-column: 1 / -1;
  user-select: none;
  border-radius: var(--border-radius);
  margin-inline: 1rem;
  overflow: hidden;
}

header {
  grid-template-columns: 1fr auto auto;
}

header label {
  grid-template-columns: auto 1fr;
}

header label input {
  display: none;
}

/* MARK: NAV
*/
nav {
  display: grid;
  grid-auto-flow: var(--tab-grid-auto-flow);
  grid-row: var(--grid-row-span);
  user-select: none;
  justify-content: var(--nav-justify-content);
  margin-inline-start: 1rem;
  overflow: hidden;
  align-content: start;
}

nav details {
  display: grid;
  overflow: hidden;
}

nav details summary {
  letter-spacing: 0.0625rem;
  text-wrap: pretty;
  font-weight: 900;
  padding-inline: 1rem;
  padding-block: .5rem;
  padding-inline-start: 0;
  overflow: hidden;
}

nav details label {
  padding-inline: 1rem;
  padding-block: .5rem;
  cursor: pointer;
  user-select: none;
}

nav details {
  grid-auto-flow: var(--tab-grid-auto-flow);
}

nav details section {
  grid-auto-flow: var(--tab-grid-auto-flow);
}

nav label {
  grid-template-columns: auto 1fr;
  border-radius: var(--nav-border-radius);
}

nav label input {
  display: none;
}

header app-logo,
header app-user,
footer powered-by,
footer app-version,
demo-buttons {
  padding: 1rem;
}

/* MARK: MAIN
*/
main {
  display: grid;
  grid-row: var(--grid-row-span);
  margin-block: var(--main-margin-block);
  margin-inline: var(--main-margin-inline);
  border-radius: var(--main-border-radius);
  margin-inline-end: 1rem;
  overflow: hidden;
  align-content: start;
  /* resize: var(--main-resize-h); */
}

/* MARK:ARTICLE
*/
/* Hide <article> by default */
main article {
  display: none;
  align-content: start;
  overflow: hidden;
}

/* Show <article> when <article><h1> has content */
main article:has(h1:not(:empty)) {
  display: grid;
}

/* main article > ul:has(h1:not(:empty)) {
  display: grid;
} */

/* Hide <p> by default */
main article > p {
  display: none;
}

/* Show <p> when <p> has content */
main article > p:not(:empty) {
  display: grid;
}

/* Hide <select> by default */
main article select {
  display: none;
  margin-inline: 1rem;
}

/* Show <select> when <select> has content */
main article select:has(option:not(:empty)) {
  display: grid;
}

/* MARK: UL LI TABLES
*/
/* Hide <ul> and <section><ul> by default */
main article > ul {
  display: none;
}

/* Style UL LI table header <ul> BEFORE <section> */
main article > ul:has(+ section) {
  list-style-type: none;
  margin-block-start: 1rem;
  font-weight: bolder;
  letter-spacing: 0.0625rem;
}

main article section ul {
  display: none;
  list-style-type: none;
  grid-auto-flow: column;
}

main article section ul:has(li label *:not(:empty)) {
  display: grid;
  grid-auto-flow: row;

}

main article section ul li {
  display: grid;
  grid-template-columns: 1fr;
  cursor: pointer;
}

main article section ul li label {
  /* https://www.youtube.com/watch?v=EeM5wnhO9iI */
  grid-template-columns: repeat(auto-fit, minmax(min(1rem), 1fr));
  gap: 1rem;
}

main article section ul li:hover {
  background-color: rgba(var(--bg-active-color), 0.05);
}

/* LI active state */
main article section ul li:has(input:checked) {
  background-color: rgba(var(--bg-active-color), 0.05);
  color: rgba(var(--txt-active), 1.0);
}

/* Spinner visible when selected */
main article section ul li:has(input:checked) load-data {
  display: grid;
}

main article section ul li label {
  display: none;
  word-break: break-all;
  text-wrap: pretty;
  /* white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; */
}

main article section ul li label span {
  padding: .5rem;
}

main article section ul li label span:first-of-type {
  padding-inline-start: 1rem;
}

main article section ul li label span:last-of-type {
  padding-inline-end: 1rem;
}

main article section ul li label:not(:empty) {
  display: inline-grid;
}

main article input[type="search"] {
  display: none;
}

main article input[type="search"]:not(:empty) {
  display: grid;
}

main article input[type="search"]:not(:placeholder-shown) {
  display: grid;
}

/* MARK: SECTION
*/
main article section {
  display: grid;
  overflow: overlay;
  position: relative;
  align-content: start;
  background:
    /* cover */
    linear-gradient(var(--bg-panel-color) 33%,
      rgba(var(--bg-panel-color), 0.0)),
    linear-gradient(rgba(var(--bg-panel-color), 0.0),
      var(--bg-panel-color) 66%) 0 100%,
    /* drop-shadow */
    radial-gradient(farthest-side at 50% 0,
      rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.0)),
    radial-gradient(farthest-side at 50% 100%,
      rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.0)) 0 100%;
  background-color: rgba(var(--bg-panel-color), --bg-panel-opacity);
  background-repeat: no-repeat;
  background-attachment: local, local, scroll, scroll;
  background-size: 100% 36px, 100% 36px, 100% 5px, 100% 5px;
}

/* MARK: ASIDE
*/
aside {
  display: none;
  overflow: hidden;
  align-content: start;
  border-radius: var(--border-radius);
  margin-inline-end: 1rem;
}

aside:has(form fieldset:not(:empty)) {
  display: grid;
      grid-template-rows: auto 1fr;
}

aside form {
  display: grid;
}

aside form small,
aside form fieldset {
  grid-column: 1 / -1;
}


/* Place buttons horizontally */
aside form button[data-delete] { grid-column: 1; }
aside form button[data-reset]  { grid-column: 2; }
aside form button[data-submit] { grid-column: 3; }

/* Optional: Align buttons left */
aside form {
  grid-template-columns: 1fr auto auto;
  grid-template-rows: auto 1fr auto auto;
  gap: 1rem;
  justify-content: start;
  align-items: center;
}


/* MARK: FOOTER
*/
footer {
  display: grid;
  grid-template-columns: 1fr auto;
  grid-auto-flow: column;
  grid-column: 1 / -1;
  user-select: none;
  border-radius: var(--border-radius);
  margin-inline: 1rem;
  overflow: hidden;
}

br {
  display: block;
  margin: .5rem;
}


.modal-confirm {
  position: absolute;
  inset: 0;
  display: grid;
  place-items: center;
  z-index: 1000;
  visibility: hidden;
  opacity: 0;
}

.modal-confirm.show {
  visibility: visible;
  opacity: 1;
}

.modal-confirm .modal-backdrop {
  position: absolute;
  inset: 0;
  background: rgba(0,0,0,0.7);
}

.modal-confirm .modal-content {
  position: relative;
  background: rgba(var(--bg-panel-color), 0.9);
  padding: 1rem;
  border-radius: var(--border-radius);
  display: grid;
  gap: 1rem;
  max-width: 20rem;
}

.modal-confirm .modal-buttons {
  display: flex;
  gap: 0.5rem;
  justify-content: flex-end;
}

.modal-confirm button {
  cursor: pointer;
  padding: 0.5rem 1rem;
  border-radius: var(--border-radius);
  border: none;
  background-color: rgba(var(--button-bg-color), 0.1);
  color: white;
}

.modal-confirm button:hover {
  background-color: rgba(var(--button-bg-color), 0.5);
}
