/* MARK: FORMS
*/
form {
  display: grid;
  gap: 1rem;
  max-width: 40rem;
  padding: 1rem;
}

/* Visually hide fieldset/legend, keep accessible */
fieldset {
  border: none;
  margin: 0;
  padding: 0;
}

legend {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  white-space: nowrap;
  border: 0;
}

/* Field label + input layout */
form label {
  display: block;
  font-size: 0.875rem;
  font-weight: 500;
  margin-block-end: 0.25rem;
  margin-block-start: 1rem;
}

form input[type="text"],
form input[type="email"],
form input[type="number"],
form input[type="url"],
form input[type="password"],
form input[type="search"] {
  width: 100%;
  font-size: 1rem;
  padding: 0.5rem;
  border: 1px solid rgba(var(--txt-color), 0.2);
  border-radius: 0.25rem;
  background-color: rgba(var(--bg-color), 0.1);
  color: rgba(var(--txt-color), 1);
}

/* Checkbox layout */
form input[type="checkbox"] {
  margin-right: 0.5rem;
  vertical-align: middle;
}

/* MARK: VALIDATION
*/
/* Disabled by default */
form button[type="submit"] {
  pointer-events: none;
  opacity: 0.5;
}

/* Enable only if all inputs are valid */
form:has(input[name="item-name"]:valid):has(input[name="item-type"]:valid):has(input[name="item-author"]:valid):has(input[name="item-modified"]:valid) button[type="submit"] {
  pointer-events: auto;
  opacity: 1;
}

/* Optional: style invalid/valid states */
form input:invalid {
  border-block-start-color: rgba(0,0,0,0.5);
  border-inline-end-color: rgba(0,0,0,0.4);
  border-block-end-color: red;
}

form input:valid {
  border-block-start-color: rgba(0,0,0,0.5);
  border-inline-end-color: rgba(0,0,0,0.5);
  border-block-end-color: green;
}

/* MARK: BUTTON CONTROL
*/
/* Form <button> is disabled - default */
form button[type="submit"] {
  pointer-events: none;
  opacity: 0.5;
}

/* Form <button> is enabled only when ALL form inputs are valid */
/* form:has(input:valid):has(select:valid):has(input:valid) {
  pointer-events: auto;
  opacity: 1;
} */

/* Form <button> is enabled only when OPTION TYPES form inputs are valid */
form:has(input:valid):has(select:valid):has(input[name="ip-start"]:valid):has(input[name="mac-address"]:valid):has(input[name="option-code"]:valid) button[type="submit"] {
  pointer-events: auto;
  opacity: 1;
}

/* MARK: FIELDSETS
   Map nav labels to the associated fieldsets
*/
/* Hide all fieldsets by default */
aside form fieldset {
  display: none;
}

nav:has(details:nth-of-type(1) label:nth-of-type(1) input:checked) ~ main:has(article:nth-of-type(1)) ~ aside form fieldset:nth-of-type(1),
nav:has(details:nth-of-type(1) label:nth-of-type(2) input:checked) ~ main:has(article:nth-of-type(2)) ~ aside form fieldset:nth-of-type(2),
nav:has(details:nth-of-type(2) label:nth-of-type(1) input:checked) ~ main:has(article:nth-of-type(3)) ~ aside form fieldset:nth-of-type(3),
nav:has(details:nth-of-type(2) label:nth-of-type(2) input:checked) ~ main:has(article:nth-of-type(4)) ~ aside form fieldset:nth-of-type(4),
nav:has(details:nth-of-type(2) label:nth-of-type(3) input:checked) ~ main:has(article:nth-of-type(5)) ~ aside form fieldset:nth-of-type(5),
nav:has(details:nth-of-type(2) label:nth-of-type(4) input:checked) ~ main:has(article:nth-of-type(6)) ~ aside form fieldset:nth-of-type(6),
nav:has(details:nth-of-type(2) label:nth-of-type(5) input:checked) ~ main:has(article:nth-of-type(7)) ~ aside form fieldset:nth-of-type(7),
nav:has(details:nth-of-type(2) label:nth-of-type(6) input:checked) ~ main:has(article:nth-of-type(8)) ~ aside form fieldset:nth-of-type(8),
nav:has(details:nth-of-type(2) label:nth-of-type(7) input:checked) ~ main:has(article:nth-of-type(9)) ~ aside form fieldset:nth-of-type(9),
nav:has(details:nth-of-type(2) label:nth-of-type(8) input:checked) ~ main:has(article:nth-of-type(10)) ~ aside form fieldset:nth-of-type(10),
nav:has(details:nth-of-type(2) label:nth-of-type(9) input:checked) ~ main:has(article:nth-of-type(11)) ~ aside form fieldset:nth-of-type(11),
nav:has(details:nth-of-type(2) label:nth-of-type(10) input:checked) ~ main:has(article:nth-of-type(12)) ~ aside form fieldset:nth-of-type(12) {
  display: grid;
}